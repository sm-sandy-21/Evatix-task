{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport memoizeOne from 'memoize-one';\n\nvar collapseRange = function collapseRange(pages, current, _ref) {\n  var max = _ref.max,\n      ellipsis = _ref.ellipsis,\n      transform = _ref.transform;\n  var total = pages.length; // only need ellipsis if we have more pages than we can display\n\n  var needEllipsis = total > max; // show start ellipsis if the current page is further away than max - 4 from the first page\n\n  var hasStartEllipsis = needEllipsis && max - 4 < current; // show end ellipsis if the current page is further than total - max + 3 from the last page\n\n  var hasEndEllipsis = needEllipsis && current < total - max + 3;\n  var getPageComponents = memoizeOne(function () {\n    var startIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var lastIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : total;\n    return pages.slice(startIndex, lastIndex).map(function (page, index) {\n      return transform(page, startIndex + index);\n    });\n  });\n\n  if (!needEllipsis) {\n    return getPageComponents(0, total);\n  }\n\n  if (hasStartEllipsis && !hasEndEllipsis) {\n    var _pageCount = max - 2;\n\n    return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n      key: 'elipses-1'\n    })], _toConsumableArray(getPageComponents(total - _pageCount)));\n  }\n\n  if (!hasStartEllipsis && hasEndEllipsis) {\n    var _pageCount2 = max - 2;\n\n    return [].concat(_toConsumableArray(getPageComponents(0, _pageCount2)), [ellipsis({\n      key: 'elipses-1'\n    })], _toConsumableArray(getPageComponents(total - 1)));\n  } // we have both start and end ellipsis\n\n\n  var pageCount = max - 4;\n  return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n    key: 'elipses-1'\n  })], _toConsumableArray(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [ellipsis({\n    key: 'elipses-2'\n  })], _toConsumableArray(getPageComponents(total - 1)));\n};\n\nexport default collapseRange;","map":{"version":3,"sources":["/home/sandy/Documents/evatix/create-components/node_modules/@atlaskit/pagination/dist/esm/internal/utils/collapse-range.js"],"names":["_toConsumableArray","memoizeOne","collapseRange","pages","current","_ref","max","ellipsis","transform","total","length","needEllipsis","hasStartEllipsis","hasEndEllipsis","getPageComponents","startIndex","arguments","undefined","lastIndex","slice","map","page","index","_pageCount","concat","key","_pageCount2","pageCount","Math","floor"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport memoizeOne from 'memoize-one';\n\nvar collapseRange = function collapseRange(pages, current, _ref) {\n  var max = _ref.max,\n      ellipsis = _ref.ellipsis,\n      transform = _ref.transform;\n  var total = pages.length; // only need ellipsis if we have more pages than we can display\n\n  var needEllipsis = total > max; // show start ellipsis if the current page is further away than max - 4 from the first page\n\n  var hasStartEllipsis = needEllipsis && max - 4 < current; // show end ellipsis if the current page is further than total - max + 3 from the last page\n\n  var hasEndEllipsis = needEllipsis && current < total - max + 3;\n  var getPageComponents = memoizeOne(function () {\n    var startIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var lastIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : total;\n    return pages.slice(startIndex, lastIndex).map(function (page, index) {\n      return transform(page, startIndex + index);\n    });\n  });\n\n  if (!needEllipsis) {\n    return getPageComponents(0, total);\n  }\n\n  if (hasStartEllipsis && !hasEndEllipsis) {\n    var _pageCount = max - 2;\n\n    return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n      key: 'elipses-1'\n    })], _toConsumableArray(getPageComponents(total - _pageCount)));\n  }\n\n  if (!hasStartEllipsis && hasEndEllipsis) {\n    var _pageCount2 = max - 2;\n\n    return [].concat(_toConsumableArray(getPageComponents(0, _pageCount2)), [ellipsis({\n      key: 'elipses-1'\n    })], _toConsumableArray(getPageComponents(total - 1)));\n  } // we have both start and end ellipsis\n\n\n  var pageCount = max - 4;\n  return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({\n    key: 'elipses-1'\n  })], _toConsumableArray(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [ellipsis({\n    key: 'elipses-2'\n  })], _toConsumableArray(getPageComponents(total - 1)));\n};\n\nexport default collapseRange;"]},"metadata":{},"sourceType":"module"}