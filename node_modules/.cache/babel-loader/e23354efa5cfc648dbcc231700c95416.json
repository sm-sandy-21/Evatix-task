{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Handle controlled & uncontrolled component state\n *\n * ```js\n *  const [uncontrolledState, setUncontrolledState] = useControlled(\n    controlledValue,\n    () => defaultValue,\n  );\n * ```\n *\n * @param propValue\n * @param getDefaultPropValue\n */\n\nexport default function useControlled(propValue) {\n  var getDefaultPropValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return propValue;\n  };\n  var isControlled = propValue !== undefined;\n\n  var _useState = useState(getDefaultPropValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      valueState = _useState2[0],\n      setValue = _useState2[1];\n\n  var isControlledRef = useRef(isControlled);\n  useEffect(function () {\n    isControlledRef.current = isControlled;\n  }, [isControlled]);\n  var value = isControlled ? propValue : valueState;\n  var setValueIfUncontrolled = useCallback(function (newValue) {\n    if (!isControlledRef.current) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","map":{"version":3,"sources":["/home/sandy/Documents/evatix/create-components/node_modules/@atlaskit/pagination/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-controlled.js"],"names":["_slicedToArray","useCallback","useEffect","useRef","useState","useControlled","propValue","getDefaultPropValue","arguments","length","undefined","isControlled","_useState","_useState2","valueState","setValue","isControlledRef","current","value","setValueIfUncontrolled","newValue"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAC/C,MAAIC,mBAAmB,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,YAAY;AACxG,WAAOF,SAAP;AACD,GAFD;AAGA,MAAIK,YAAY,GAAGL,SAAS,KAAKI,SAAjC;;AAEA,MAAIE,SAAS,GAAGR,QAAQ,CAACG,mBAAD,CAAxB;AAAA,MACIM,UAAU,GAAGb,cAAc,CAACY,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,UAAU,GAAGD,UAAU,CAAC,CAAD,CAF3B;AAAA,MAGIE,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAHzB;;AAKA,MAAIG,eAAe,GAAGb,MAAM,CAACQ,YAAD,CAA5B;AACAT,EAAAA,SAAS,CAAC,YAAY;AACpBc,IAAAA,eAAe,CAACC,OAAhB,GAA0BN,YAA1B;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGA,MAAIO,KAAK,GAAGP,YAAY,GAAGL,SAAH,GAAeQ,UAAvC;AACA,MAAIK,sBAAsB,GAAGlB,WAAW,CAAC,UAAUmB,QAAV,EAAoB;AAC3D,QAAI,CAACJ,eAAe,CAACC,OAArB,EAA8B;AAC5BF,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACD;AACF,GAJuC,EAIrC,EAJqC,CAAxC;AAKA,SAAO,CAACF,KAAD,EAAQC,sBAAR,CAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Handle controlled & uncontrolled component state\n *\n * ```js\n *  const [uncontrolledState, setUncontrolledState] = useControlled(\n    controlledValue,\n    () => defaultValue,\n  );\n * ```\n *\n * @param propValue\n * @param getDefaultPropValue\n */\n\nexport default function useControlled(propValue) {\n  var getDefaultPropValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return propValue;\n  };\n  var isControlled = propValue !== undefined;\n\n  var _useState = useState(getDefaultPropValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      valueState = _useState2[0],\n      setValue = _useState2[1];\n\n  var isControlledRef = useRef(isControlled);\n  useEffect(function () {\n    isControlledRef.current = isControlled;\n  }, [isControlled]);\n  var value = isControlled ? propValue : valueState;\n  var setValueIfUncontrolled = useCallback(function (newValue) {\n    if (!isControlledRef.current) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"]},"metadata":{},"sourceType":"module"}