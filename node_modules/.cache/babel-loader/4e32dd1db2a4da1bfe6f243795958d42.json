{"ast":null,"code":"// eslint-disable-next-line @repo/internal/fs/filename-pattern-match\nimport React, { Fragment } from 'react';\nimport { background, G300, N200, N40, purple, R300 } from '@atlaskit/theme/colors';\nimport { ICON_OFFSET, ICON_SIZES } from './constants';\nimport IconWrapper from './IconWrapper';\nvar BusyIndicator = /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"circle\", {\n  fill: R300,\n  cx: \"4\",\n  cy: \"4\",\n  r: \"4\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: background(),\n  d: \"M3.3,1.9l2.8,2.8c0.2,0.2,0.2,0.5,0,0.7L5.4,6.1c-0.2,0.2-0.5,0.2-0.7,0L1.9,3.3c-0.2-0.2-0.2-0.5,0-0.7l0.7-0.7C2.8,1.7,3.1,1.7,3.3,1.9z\"\n}));\nvar FocusIndicator = /*#__PURE__*/React.createElement(\"path\", {\n  fill: purple(),\n  d: \"M4,8 C1.790861,8 0,6.209139 0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 Z M4,6.66666667 C5.47275933,6.66666667 6.66666667,5.47275933 6.66666667,4 C6.66666667,2.52724067 5.47275933,1.33333333 4,1.33333333 C2.52724067,1.33333333 1.33333333,2.52724067 1.33333333,4 C1.33333333,5.47275933 2.52724067,6.66666667 4,6.66666667 Z M4,5.33333333 C3.26362033,5.33333333 2.66666667,4.73637967 2.66666667,4 C2.66666667,3.26362033 3.26362033,2.66666667 4,2.66666667 C4.73637967,2.66666667 5.33333333,3.26362033 5.33333333,4 C5.33333333,4.73637967 4.73637967,5.33333333 4,5.33333333 Z\"\n});\nvar OfflineIndicator = /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: N200,\n  d: \"M4,8 C6.209139,8 8,6.209139 8,4 C8,1.790861 6.209139,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: N40,\n  d: \"M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z\"\n}));\nvar OnlineIndicator = /*#__PURE__*/React.createElement(\"circle\", {\n  fill: G300,\n  cx: \"4\",\n  cy: \"4\",\n  r: \"4\"\n});\n\nfunction getPresence(presence) {\n  switch (presence) {\n    case 'busy':\n      return BusyIndicator;\n\n    case 'focus':\n      return FocusIndicator;\n\n    case 'offline':\n      return OfflineIndicator;\n\n    case 'online':\n      return OnlineIndicator;\n  }\n}\n/**\n * __Avatar presence__\n *\n * A presence shows an avatarâ€™s availability.\n *\n * - [Examples](https://atlassian.design/components/avatar/avatar-presence/examples)\n * - [Code](https://atlassian.design/components/avatar/avatar-presence/code)\n * - [Usage](https://atlassian.design/components/avatar/avatar-presence/usage)\n */\n\n\nvar AvatarPresence = function AvatarPresence(_ref) {\n  var borderColor = _ref.borderColor,\n      children = _ref.children,\n      presence = _ref.presence;\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    bgColor: borderColor\n  }, presence ? /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"100%\",\n    version: \"1.1\",\n    viewBox: \"0 0 8 8\",\n    width: \"100%\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, getPresence(presence)) : children);\n};\n\nexport default AvatarPresence;\n/**\n * __Presence wrapper__\n *\n * A presence wrapper is used internally to position presence ontop of the avatar.\n */\n\nexport var PresenceWrapper = function PresenceWrapper(_ref2) {\n  var size = _ref2.size,\n      appearance = _ref2.appearance,\n      children = _ref2.children,\n      borderColor = _ref2.borderColor,\n      presence = _ref2.presence,\n      testId = _ref2.testId;\n  var position = appearance === 'square' ? -4 : ICON_OFFSET[size];\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": testId && \"\".concat(testId, \"--presence\"),\n    style: {\n      pointerEvents: 'none',\n      position: 'absolute',\n      bottom: \"\".concat(position, \"px\"),\n      height: \"\".concat(ICON_SIZES[size], \"px\"),\n      right: \"\".concat(position, \"px\"),\n      width: \"\".concat(ICON_SIZES[size], \"px\")\n    }\n  }, /*#__PURE__*/React.createElement(AvatarPresence, {\n    borderColor: borderColor,\n    presence: !children && presence\n  }, children));\n};","map":{"version":3,"sources":["/home/sandy/Documents/evatix/create-components/node_modules/@atlaskit/avatar/dist/esm/Presence.js"],"names":["React","Fragment","background","G300","N200","N40","purple","R300","ICON_OFFSET","ICON_SIZES","IconWrapper","BusyIndicator","createElement","fill","cx","cy","r","d","FocusIndicator","OfflineIndicator","OnlineIndicator","getPresence","presence","AvatarPresence","_ref","borderColor","children","bgColor","height","version","viewBox","width","xmlns","PresenceWrapper","_ref2","size","appearance","testId","position","concat","style","pointerEvents","bottom","right"],"mappings":"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","sourcesContent":["// eslint-disable-next-line @repo/internal/fs/filename-pattern-match\nimport React, { Fragment } from 'react';\nimport { background, G300, N200, N40, purple, R300 } from '@atlaskit/theme/colors';\nimport { ICON_OFFSET, ICON_SIZES } from './constants';\nimport IconWrapper from './IconWrapper';\nvar BusyIndicator = /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"circle\", {\n  fill: R300,\n  cx: \"4\",\n  cy: \"4\",\n  r: \"4\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: background(),\n  d: \"M3.3,1.9l2.8,2.8c0.2,0.2,0.2,0.5,0,0.7L5.4,6.1c-0.2,0.2-0.5,0.2-0.7,0L1.9,3.3c-0.2-0.2-0.2-0.5,0-0.7l0.7-0.7C2.8,1.7,3.1,1.7,3.3,1.9z\"\n}));\nvar FocusIndicator = /*#__PURE__*/React.createElement(\"path\", {\n  fill: purple(),\n  d: \"M4,8 C1.790861,8 0,6.209139 0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 Z M4,6.66666667 C5.47275933,6.66666667 6.66666667,5.47275933 6.66666667,4 C6.66666667,2.52724067 5.47275933,1.33333333 4,1.33333333 C2.52724067,1.33333333 1.33333333,2.52724067 1.33333333,4 C1.33333333,5.47275933 2.52724067,6.66666667 4,6.66666667 Z M4,5.33333333 C3.26362033,5.33333333 2.66666667,4.73637967 2.66666667,4 C2.66666667,3.26362033 3.26362033,2.66666667 4,2.66666667 C4.73637967,2.66666667 5.33333333,3.26362033 5.33333333,4 C5.33333333,4.73637967 4.73637967,5.33333333 4,5.33333333 Z\"\n});\nvar OfflineIndicator = /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: N200,\n  d: \"M4,8 C6.209139,8 8,6.209139 8,4 C8,1.790861 6.209139,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: N40,\n  d: \"M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z\"\n}));\nvar OnlineIndicator = /*#__PURE__*/React.createElement(\"circle\", {\n  fill: G300,\n  cx: \"4\",\n  cy: \"4\",\n  r: \"4\"\n});\n\nfunction getPresence(presence) {\n  switch (presence) {\n    case 'busy':\n      return BusyIndicator;\n\n    case 'focus':\n      return FocusIndicator;\n\n    case 'offline':\n      return OfflineIndicator;\n\n    case 'online':\n      return OnlineIndicator;\n  }\n}\n/**\n * __Avatar presence__\n *\n * A presence shows an avatarâ€™s availability.\n *\n * - [Examples](https://atlassian.design/components/avatar/avatar-presence/examples)\n * - [Code](https://atlassian.design/components/avatar/avatar-presence/code)\n * - [Usage](https://atlassian.design/components/avatar/avatar-presence/usage)\n */\n\n\nvar AvatarPresence = function AvatarPresence(_ref) {\n  var borderColor = _ref.borderColor,\n      children = _ref.children,\n      presence = _ref.presence;\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    bgColor: borderColor\n  }, presence ? /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"100%\",\n    version: \"1.1\",\n    viewBox: \"0 0 8 8\",\n    width: \"100%\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, getPresence(presence)) : children);\n};\n\nexport default AvatarPresence;\n\n/**\n * __Presence wrapper__\n *\n * A presence wrapper is used internally to position presence ontop of the avatar.\n */\nexport var PresenceWrapper = function PresenceWrapper(_ref2) {\n  var size = _ref2.size,\n      appearance = _ref2.appearance,\n      children = _ref2.children,\n      borderColor = _ref2.borderColor,\n      presence = _ref2.presence,\n      testId = _ref2.testId;\n  var position = appearance === 'square' ? -4 : ICON_OFFSET[size];\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": testId && \"\".concat(testId, \"--presence\"),\n    style: {\n      pointerEvents: 'none',\n      position: 'absolute',\n      bottom: \"\".concat(position, \"px\"),\n      height: \"\".concat(ICON_SIZES[size], \"px\"),\n      right: \"\".concat(position, \"px\"),\n      width: \"\".concat(ICON_SIZES[size], \"px\")\n    }\n  }, /*#__PURE__*/React.createElement(AvatarPresence, {\n    borderColor: borderColor,\n    presence: !children && presence\n  }, children));\n};"]},"metadata":{},"sourceType":"module"}