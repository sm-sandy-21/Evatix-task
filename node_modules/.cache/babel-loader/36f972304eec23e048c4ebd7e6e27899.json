{"ast":null,"code":"// There are cases where the context is not available, such as when a dropdown item is used\n// inside @atlaskit/navigation. For this reason we have this helper function which safely calls\n// the context functions if they are available.\nexport default (function (instance, contextKey) {\n  return function (fnToCall) {\n    var _instance$context$con;\n\n    if (!instance.context[contextKey]) {\n      return null;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return (_instance$context$con = instance.context[contextKey])[fnToCall].apply(_instance$context$con, args);\n  };\n});","map":{"version":3,"sources":["/home/sandy/Documents/evatix/create-components/node_modules/@atlaskit/dropdown-menu/dist/esm/util/safeContextCall.js"],"names":["instance","contextKey","fnToCall","_instance$context$con","context","_len","arguments","length","args","Array","_key","apply"],"mappings":"AAAA;AACA;AACA;AACA,gBAAgB,UAAUA,QAAV,EAAoBC,UAApB,EAAgC;AAC9C,SAAO,UAAUC,QAAV,EAAoB;AACzB,QAAIC,qBAAJ;;AAEA,QAAI,CAACH,QAAQ,CAACI,OAAT,CAAiBH,UAAjB,CAAL,EAAmC;AACjC,aAAO,IAAP;AACD;;AAED,SAAK,IAAII,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,WAAO,CAACP,qBAAqB,GAAGH,QAAQ,CAACI,OAAT,CAAiBH,UAAjB,CAAzB,EAAuDC,QAAvD,EAAiES,KAAjE,CAAuER,qBAAvE,EAA8FK,IAA9F,CAAP;AACD,GAZD;AAaD,CAdD","sourcesContent":["// There are cases where the context is not available, such as when a dropdown item is used\n// inside @atlaskit/navigation. For this reason we have this helper function which safely calls\n// the context functions if they are available.\nexport default (function (instance, contextKey) {\n  return function (fnToCall) {\n    var _instance$context$con;\n\n    if (!instance.context[contextKey]) {\n      return null;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return (_instance$context$con = instance.context[contextKey])[fnToCall].apply(_instance$context$con, args);\n  };\n});"]},"metadata":{},"sourceType":"module"}