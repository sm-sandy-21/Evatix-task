{"ast":null,"code":"var positionMap = {\n  'top left': {\n    position: 'top-start',\n    animation: 'top'\n  },\n  'top center': {\n    position: 'top',\n    animation: 'top'\n  },\n  'top right': {\n    position: 'top-end',\n    animation: 'top'\n  },\n  'right top': {\n    position: 'right-start',\n    animation: 'right'\n  },\n  'right middle': {\n    position: 'right',\n    animation: 'right'\n  },\n  'right bottom': {\n    position: 'right-end',\n    animation: 'right'\n  },\n  'bottom left': {\n    position: 'bottom-start',\n    animation: 'bottom'\n  },\n  'bottom center': {\n    position: 'bottom',\n    animation: 'bottom'\n  },\n  'bottom right': {\n    position: 'bottom-end',\n    animation: 'bottom'\n  },\n  'left top': {\n    position: 'left-start',\n    animation: 'left'\n  },\n  'left middle': {\n    position: 'left',\n    animation: 'left'\n  },\n  'left bottom': {\n    position: 'left-end',\n    animation: 'left'\n  }\n};\nexport var POSITION_ATTRIBUTE_ENUM = {\n  values: ['top left', 'top center', 'top right', 'right top', 'right middle', 'right bottom', 'bottom left', 'bottom center', 'bottom right', 'left top', 'left middle', 'left bottom'],\n  default: 'right middle'\n};\n\nfunction positionToPopper(position) {\n  return position && positionMap[position] ? positionMap[position].position : null;\n}\n/* Convert the autoFlip property into the array format that Popper expects.\n * The first item must not include the edge-position variation, or Popper will not understand it.\n */\n\n\nexport function getFlipBehavior(props) {\n  return props.position && Array.isArray(props.autoFlip) ? [props.position.split(' ')[0]].concat(props.autoFlip) : null;\n}\nexport function positionPropToPopperPosition(position) {\n  return positionToPopper(position) || positionMap[POSITION_ATTRIBUTE_ENUM.default].position;\n}","map":{"version":3,"sources":["/home/sandy/Documents/evatix/create-components/node_modules/@atlaskit/dropdown-menu/node_modules/@atlaskit/layer/dist/esm/components/internal/helpers.js"],"names":["positionMap","position","animation","POSITION_ATTRIBUTE_ENUM","values","default","positionToPopper","getFlipBehavior","props","Array","isArray","autoFlip","split","concat","positionPropToPopperPosition"],"mappings":"AAAA,IAAIA,WAAW,GAAG;AAChB,cAAY;AACVC,IAAAA,QAAQ,EAAE,WADA;AAEVC,IAAAA,SAAS,EAAE;AAFD,GADI;AAKhB,gBAAc;AACZD,IAAAA,QAAQ,EAAE,KADE;AAEZC,IAAAA,SAAS,EAAE;AAFC,GALE;AAShB,eAAa;AACXD,IAAAA,QAAQ,EAAE,SADC;AAEXC,IAAAA,SAAS,EAAE;AAFA,GATG;AAahB,eAAa;AACXD,IAAAA,QAAQ,EAAE,aADC;AAEXC,IAAAA,SAAS,EAAE;AAFA,GAbG;AAiBhB,kBAAgB;AACdD,IAAAA,QAAQ,EAAE,OADI;AAEdC,IAAAA,SAAS,EAAE;AAFG,GAjBA;AAqBhB,kBAAgB;AACdD,IAAAA,QAAQ,EAAE,WADI;AAEdC,IAAAA,SAAS,EAAE;AAFG,GArBA;AAyBhB,iBAAe;AACbD,IAAAA,QAAQ,EAAE,cADG;AAEbC,IAAAA,SAAS,EAAE;AAFE,GAzBC;AA6BhB,mBAAiB;AACfD,IAAAA,QAAQ,EAAE,QADK;AAEfC,IAAAA,SAAS,EAAE;AAFI,GA7BD;AAiChB,kBAAgB;AACdD,IAAAA,QAAQ,EAAE,YADI;AAEdC,IAAAA,SAAS,EAAE;AAFG,GAjCA;AAqChB,cAAY;AACVD,IAAAA,QAAQ,EAAE,YADA;AAEVC,IAAAA,SAAS,EAAE;AAFD,GArCI;AAyChB,iBAAe;AACbD,IAAAA,QAAQ,EAAE,MADG;AAEbC,IAAAA,SAAS,EAAE;AAFE,GAzCC;AA6ChB,iBAAe;AACbD,IAAAA,QAAQ,EAAE,UADG;AAEbC,IAAAA,SAAS,EAAE;AAFE;AA7CC,CAAlB;AAkDA,OAAO,IAAIC,uBAAuB,GAAG;AACnCC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,YAAb,EAA2B,WAA3B,EAAwC,WAAxC,EAAqD,cAArD,EAAqE,cAArE,EAAqF,aAArF,EAAoG,eAApG,EAAqH,cAArH,EAAqI,UAArI,EAAiJ,aAAjJ,EAAgK,aAAhK,CAD2B;AAEnCC,EAAAA,OAAO,EAAE;AAF0B,CAA9B;;AAKP,SAASC,gBAAT,CAA0BL,QAA1B,EAAoC;AAClC,SAAOA,QAAQ,IAAID,WAAW,CAACC,QAAD,CAAvB,GAAoCD,WAAW,CAACC,QAAD,CAAX,CAAsBA,QAA1D,GAAqE,IAA5E;AACD;AACD;AACA;AACA;;;AAGA,OAAO,SAASM,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAOA,KAAK,CAACP,QAAN,IAAkBQ,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACG,QAApB,CAAlB,GAAkD,CAACH,KAAK,CAACP,QAAN,CAAeW,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAD,EAA+BC,MAA/B,CAAsCL,KAAK,CAACG,QAA5C,CAAlD,GAA0G,IAAjH;AACD;AACD,OAAO,SAASG,4BAAT,CAAsCb,QAAtC,EAAgD;AACrD,SAAOK,gBAAgB,CAACL,QAAD,CAAhB,IAA8BD,WAAW,CAACG,uBAAuB,CAACE,OAAzB,CAAX,CAA6CJ,QAAlF;AACD","sourcesContent":["var positionMap = {\n  'top left': {\n    position: 'top-start',\n    animation: 'top'\n  },\n  'top center': {\n    position: 'top',\n    animation: 'top'\n  },\n  'top right': {\n    position: 'top-end',\n    animation: 'top'\n  },\n  'right top': {\n    position: 'right-start',\n    animation: 'right'\n  },\n  'right middle': {\n    position: 'right',\n    animation: 'right'\n  },\n  'right bottom': {\n    position: 'right-end',\n    animation: 'right'\n  },\n  'bottom left': {\n    position: 'bottom-start',\n    animation: 'bottom'\n  },\n  'bottom center': {\n    position: 'bottom',\n    animation: 'bottom'\n  },\n  'bottom right': {\n    position: 'bottom-end',\n    animation: 'bottom'\n  },\n  'left top': {\n    position: 'left-start',\n    animation: 'left'\n  },\n  'left middle': {\n    position: 'left',\n    animation: 'left'\n  },\n  'left bottom': {\n    position: 'left-end',\n    animation: 'left'\n  }\n};\nexport var POSITION_ATTRIBUTE_ENUM = {\n  values: ['top left', 'top center', 'top right', 'right top', 'right middle', 'right bottom', 'bottom left', 'bottom center', 'bottom right', 'left top', 'left middle', 'left bottom'],\n  default: 'right middle'\n};\n\nfunction positionToPopper(position) {\n  return position && positionMap[position] ? positionMap[position].position : null;\n}\n/* Convert the autoFlip property into the array format that Popper expects.\n * The first item must not include the edge-position variation, or Popper will not understand it.\n */\n\n\nexport function getFlipBehavior(props) {\n  return props.position && Array.isArray(props.autoFlip) ? [props.position.split(' ')[0]].concat(props.autoFlip) : null;\n}\nexport function positionPropToPopperPosition(position) {\n  return positionToPopper(position) || positionMap[POSITION_ATTRIBUTE_ENUM.default].position;\n}"]},"metadata":{},"sourceType":"module"}