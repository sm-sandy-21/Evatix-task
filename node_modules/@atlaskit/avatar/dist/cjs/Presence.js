"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PresenceWrapper = exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _colors = require("@atlaskit/theme/colors");

var _constants = require("./constants");

var _IconWrapper = _interopRequireDefault(require("./IconWrapper"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// eslint-disable-next-line @repo/internal/fs/filename-pattern-match
var BusyIndicator = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("circle", {
  fill: _colors.R300,
  cx: "4",
  cy: "4",
  r: "4"
}), /*#__PURE__*/_react.default.createElement("path", {
  fill: (0, _colors.background)(),
  d: "M3.3,1.9l2.8,2.8c0.2,0.2,0.2,0.5,0,0.7L5.4,6.1c-0.2,0.2-0.5,0.2-0.7,0L1.9,3.3c-0.2-0.2-0.2-0.5,0-0.7l0.7-0.7C2.8,1.7,3.1,1.7,3.3,1.9z"
}));

var FocusIndicator = /*#__PURE__*/_react.default.createElement("path", {
  fill: (0, _colors.purple)(),
  d: "M4,8 C1.790861,8 0,6.209139 0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 Z M4,6.66666667 C5.47275933,6.66666667 6.66666667,5.47275933 6.66666667,4 C6.66666667,2.52724067 5.47275933,1.33333333 4,1.33333333 C2.52724067,1.33333333 1.33333333,2.52724067 1.33333333,4 C1.33333333,5.47275933 2.52724067,6.66666667 4,6.66666667 Z M4,5.33333333 C3.26362033,5.33333333 2.66666667,4.73637967 2.66666667,4 C2.66666667,3.26362033 3.26362033,2.66666667 4,2.66666667 C4.73637967,2.66666667 5.33333333,3.26362033 5.33333333,4 C5.33333333,4.73637967 4.73637967,5.33333333 4,5.33333333 Z"
});

var OfflineIndicator = /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement("path", {
  fill: _colors.N200,
  d: "M4,8 C6.209139,8 8,6.209139 8,4 C8,1.790861 6.209139,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z"
}), /*#__PURE__*/_react.default.createElement("path", {
  fill: _colors.N40,
  d: "M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z"
}));

var OnlineIndicator = /*#__PURE__*/_react.default.createElement("circle", {
  fill: _colors.G300,
  cx: "4",
  cy: "4",
  r: "4"
});

function getPresence(presence) {
  switch (presence) {
    case 'busy':
      return BusyIndicator;

    case 'focus':
      return FocusIndicator;

    case 'offline':
      return OfflineIndicator;

    case 'online':
      return OnlineIndicator;
  }
}
/**
 * __Avatar presence__
 *
 * A presence shows an avatarâ€™s availability.
 *
 * - [Examples](https://atlassian.design/components/avatar/avatar-presence/examples)
 * - [Code](https://atlassian.design/components/avatar/avatar-presence/code)
 * - [Usage](https://atlassian.design/components/avatar/avatar-presence/usage)
 */


var AvatarPresence = function AvatarPresence(_ref) {
  var borderColor = _ref.borderColor,
      children = _ref.children,
      presence = _ref.presence;
  return /*#__PURE__*/_react.default.createElement(_IconWrapper.default, {
    bgColor: borderColor
  }, presence ? /*#__PURE__*/_react.default.createElement("svg", {
    height: "100%",
    version: "1.1",
    viewBox: "0 0 8 8",
    width: "100%",
    xmlns: "http://www.w3.org/2000/svg"
  }, getPresence(presence)) : children);
};

var _default = AvatarPresence;
exports.default = _default;

/**
 * __Presence wrapper__
 *
 * A presence wrapper is used internally to position presence ontop of the avatar.
 */
var PresenceWrapper = function PresenceWrapper(_ref2) {
  var size = _ref2.size,
      appearance = _ref2.appearance,
      children = _ref2.children,
      borderColor = _ref2.borderColor,
      presence = _ref2.presence,
      testId = _ref2.testId;
  var position = appearance === 'square' ? -4 : _constants.ICON_OFFSET[size];
  return /*#__PURE__*/_react.default.createElement("span", {
    "data-testid": testId && "".concat(testId, "--presence"),
    style: {
      pointerEvents: 'none',
      position: 'absolute',
      bottom: "".concat(position, "px"),
      height: "".concat(_constants.ICON_SIZES[size], "px"),
      right: "".concat(position, "px"),
      width: "".concat(_constants.ICON_SIZES[size], "px")
    }
  }, /*#__PURE__*/_react.default.createElement(AvatarPresence, {
    borderColor: borderColor,
    presence: !children && presence
  }, children));
};

exports.PresenceWrapper = PresenceWrapper;