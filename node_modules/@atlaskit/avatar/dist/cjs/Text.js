"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@emotion/core");

var _colors = require("@atlaskit/theme/colors");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var getStyles = function getStyles(isSecondary, shouldTruncate) {
  return _objectSpread(_objectSpread({
    display: 'block',
    margin: 0,
    color: _colors.N900
  }, shouldTruncate && {
    overflowX: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
  }), isSecondary && {
    color: _colors.N200,
    fontSize: '0.85em'
  });
};
/**
 * __Text__
 *
 * Text is used internally only.
 */


var Text = function Text(_ref) {
  var isSecondary = _ref.isSecondary,
      children = _ref.children,
      shouldTruncate = _ref.shouldTruncate;
  return (0, _core.jsx)("span", {
    css: getStyles(isSecondary, shouldTruncate)
  }, children);
};

var _default = Text;
exports.default = _default;