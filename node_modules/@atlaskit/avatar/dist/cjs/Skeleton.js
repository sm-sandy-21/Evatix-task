"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _core = require("@emotion/core");

var _constants = require("./constants");

/** @jsx jsx */
// eslint-disable-next-line @repo/internal/fs/filename-pattern-match
var getStyles = function getStyles(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size,
      _ref$appearance = _ref.appearance,
      appearance = _ref$appearance === void 0 ? 'circle' : _ref$appearance,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      _ref$weight = _ref.weight,
      weight = _ref$weight === void 0 ? 'normal' : _ref$weight;
  return {
    width: "".concat(_constants.AVATAR_SIZES[size], "px"),
    height: "".concat(_constants.AVATAR_SIZES[size], "px"),
    display: 'inline-block',
    borderRadius: "".concat(appearance === 'square' ? "".concat(_constants.AVATAR_RADIUS[size], "px") : '50%'),
    backgroundColor: color,
    border: "".concat(_constants.BORDER_WIDTH, "px solid transparent"),
    opacity: "".concat(weight === 'strong' ? 0.3 : 0.15)
  };
};
/**
 * __Skeleton__
 *
 * A skeleton is the loading state for the avatar component.
 *
 * - [Examples](https://atlassian.design/components/avatar/avatar-skeleton/examples)
 * - [Code](https://atlassian.design/components/avatar/avatar-skeleton/code)
 */


var Skeleton = function Skeleton(_ref2) {
  var size = _ref2.size,
      appearance = _ref2.appearance,
      color = _ref2.color,
      weight = _ref2.weight;
  return (0, _core.jsx)("div", {
    css: getStyles({
      size: size,
      appearance: appearance,
      color: color,
      weight: weight
    })
  });
};

var _default = Skeleton;
exports.default = _default;