import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import DropdownItemSelectionManager from '../context/DropdownItemSelectionManager';

// HOC that typically wraps @atlaskit/item/ItemGroup
var withDropdownItemSelectionManager = function withDropdownItemSelectionManager(WrappedComponent, selectionBehavior) {
  return /*#__PURE__*/function (_Component) {
    _inherits(WithDropdownItemSelectionManager, _Component);

    var _super = _createSuper(WithDropdownItemSelectionManager);

    function WithDropdownItemSelectionManager() {
      _classCallCheck(this, WithDropdownItemSelectionManager);

      return _super.apply(this, arguments);
    }

    _createClass(WithDropdownItemSelectionManager, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            id = _this$props.id,
            otherProps = _objectWithoutProperties(_this$props, ["children", "id"]);

        return /*#__PURE__*/React.createElement(WrappedComponent, otherProps, /*#__PURE__*/React.createElement(DropdownItemSelectionManager, {
          groupId: id,
          behavior: selectionBehavior
        }, children));
      }
    }]);

    return WithDropdownItemSelectionManager;
  }(Component);
};

export default withDropdownItemSelectionManager;